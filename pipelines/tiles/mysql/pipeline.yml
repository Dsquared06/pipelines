resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

resources:
- name: om-cli
  type: github-release
  source:
    user: pivotal-cf
    repository: om
    access_token: ((github_token)) ## Optional: Removing this will cause you to hit the rate limit

- name: pivnet-cli
  type: github-release
  source:
    user: pivotal-cf
    repository: pivnet-cli
    access_token: ((github_token)) ## Optional: Removing this will cause you to hit the rate limit

- name: jq
  type: github-release
  source:
    user: stedolan
    repository: jq
    access_token: ((github_token)) ## Optional: Removing this will cause you to hit the rate limit

- name: pipelines-repo
  type: git
  source:
    uri: ((github_repo))
    branch: ((github_branch))
    username: ((github_username))
    password: ((github_token))

- name: pivnet-product
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: ((product_name))
    product_version: ((product_version))

jobs:

- name: upload-product
  plan:
  - aggregate:
    - get: pipelines-repo
    - get: pivnet-product
      resource: pivnet-product
      params:
        globs:
        - "*.pivotal"
      trigger: true
    - get: om-cli
      params:
        globs:
        - "*-linux"
    - get: pivnet-cli
      params:
        globs:
        - "*linux-amd64*"

  - task: upload-tile
    file: pipelines-repo/tasks/upload-product/task.yml
    params:
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))
      PIVNET_API_TOKEN: ((pivnet_token))

  - task: upload-stemcell
    file: pipelines-repo/tasks/stemcell-uploader/task.yml
    params:
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))
      PIVNET_API_TOKEN: ((pivnet_token))
      NO_PROXY: ((company_proxy_domain))
      OPS_MGR_IP: ((ops_mgr_ip))
      IAAS_TYPE: ((iaas_type))

- name: stage-product
  plan:
  - aggregate:
    - get: pipelines-repo
      passed: [upload-product]
    - get: pivnet-product
      resource: pivnet-product
      params:
        globs:
        - "*.pivotal"
      passed: [upload-product]
      trigger: true
    - get: om-cli
      params:
        globs:
        - "*-linux"
      passed: [upload-product]

  - task: stage-tile
    file: pipelines-repo/tasks/stage-product/task.yml
    params:
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))
      PRODUCT_IDENTIFIER: ((product_identifier))

- name: config-product
  plan:
  - aggregate:
    - get: pipelines-repo
    - get: pivnet-product
      resource: pivnet-product
      params:
        globs:
        - "*.pivotal"
      passed: [stage-product]
      trigger: true
    - get: om-cli
      params:
        globs:
        - "*-linux"
      passed: [stage-product]
    - get: jq
      params:
        globs:
        - "*linux64*"

  - task: config-tile
    file: pipelines-repo/tasks/config-mysql/task.yml
    params:
      PRODUCT_NAME: ((product_name))
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))
      SINGLETON_JOBS_AZ: ((singleton_jobs_az))
      OTHER_AZS: ((other_azs))
      NETWORK_NAME: ((network_name))
      BACKUP_OPTIONS: ((backup_options))
      BACKUP_OPTIONS_CRON_SCHEDULE: ((backup_options_cron_schedule))
      BACKUP_OPTIONS_BACKUP_ALL_MASTERS: ((backup_options_backup_all_masters))
      BACKUPS: ((backups))
      BACKUPS_S3_ENDPOINT_URL: ((backups_s3_endpoint_url))
      BACKUPS_S3_BUCKET_NAME: ((backups_s3_bucket_name))
      BACKUPS_S3_BUCKET_PATH: ((backups_s3_bucket_path))
      BACKUPS_S3_ACCESS_KEY_ID: ((backups_s3_access_key_id))
      BACKUPS_S3_SECRET_ACCESS_KEY: ((backups_s3_secret_access_key))
      BACKUPS_S3_REGION: ((backups_s3_region))
      BACKUPS_AZURE_STORAGE_ACCOUNT: ((backups_azure_storage_account))
      BACKUPS_AZURE_STORAGE_ACCESS_KEY: ((backups_azure_storage_access_key))
      BACKUP_OPTIONS_BACKUP_ALL_MASTERS: ((backup_options_backup_all_masters))
      BACKUPS_AZURE_CONTAINER: ((backups_azure_container))
      BACKUPS_AZURE_CONTAINER_PATH: ((backups_azure_container_path))
      BACKUPS_AZURE_BASE_URL: ((backups_azure_base_url))
      BACKUPS_GCS_SERVICE_ACCOUNT_JSON: ((backups_gcs_service_account_json))
      BACKUPS_GCS_PROJECT_ID: ((backups_gcs_project_id))
      BACKUPS_GCS_BUCKET_NAME: ((backups_gcs_bucket_name))
      BACKUPS_SCP_USER: ((backups_scp_user))
      BACKUPS_SCP_SERVER: ((backups_scp_server))
      BACKUPS_SCP_DESTINATION: ((backups_scp_destination))
      BACKUPS_SCP_SCP_KEY: ((backups_scp_scp_key))
      BACKUPS_SCP_PORT: ((backups_scp_port))
      PLAN_COLLECTION_NAME: ((plan_collection_name))
      PLAN_COLLECTION_DESCRIPTION: ((plan_collection_description))
      PLAN_COLLECTION_MAX_STORAGE_MB: ((plan_collection_max_storage_mb))
      PLAN_COLLECTION_MAX_USER_CONNECTIONS: ((plan_collection_max_user_connections))
      PLAN_COLLECTION_PRIVATE: ((plan_collection_private))
      OPTIONAL_PROTECTIONS: ((optional_protections))
      OPTIONAL_PROTECTIONS_RECIPIENT_EMAIL: ((optional_protections_recipient_email))
      OPTIONAL_PROTECTIONS_PREVENT_AUTO_REJOIN: ((optional_protections_prevent_auto_rejoin))
      OPTIONAL_PROTECTIONS_REPLICATION_CANARY: ((optional_protections_replication_canary))
      OPTIONAL_PROTECTIONS_NOTIFY_ONLY: ((optional_protections_notify_only))
      OPTIONAL_PROTECTIONS_CANARY_POLL_FREQUENCY: ((optional_protections_canary_poll_frequency))
      OPTIONAL_PROTECTIONS_CANARY_WRITE_READ_DELAY: ((optional_protections_canary_write_read_delay))
      INNODB_FLUSH_LOG_AT_TRX_COMMIT: ((innodb_flush_log_at_trx_commit))
      SERVER_ACTIVITY_LOGGING: ((server_activity_logging))
      AUDIT_LOGGING_EVENTS: ((audit_logging_events))
      SERVER_AUDIT_EXCLUDED_USERS_CSV: ((server_audit_excluded_users_csv))
      SYSLOG: ((syslog))
      SYSLOG_ADDRESS: ((syslog_address))
      SYSLOG_PORT: ((syslog_port))
      BUFFER_POOL_SIZE: ((buffer_pool_size))
      BUFFER_POOL_SIZE_PERCENT: ((buffer_pool_size_percent))
      BUFFER_POOL_SIZE_BYTES: ((buffer_pool_size_bytes))
      MYSQL_ROADMIN_PASSWORD: ((mysql_roadmin_password))
      MYSQL_SKIP_NAME_RESOLVE: ((mysql_skip_name_resolve))
      MYSQL_INNODB_LARGE_PREFIX_ENABLED: ((mysql_innodb_large_prefix_enabled))
      MYSQL_MYSQL_START_TIMEOUT: ((mysql_mysql_start_timeout))
      MYSQL_METRICS_POLLING_FREQUENCY: ((mysql_metrics_polling_frequency))
      MYSQL_CLUSTER_PROBE_TIMEOUT: ((mysql_cluster_probe_timeout))
      MYSQL_TMP_TABLE_SIZE: ((mysql_tmp_table_size))
      MYSQL_TABLE_OPEN_CACHE: ((mysql_table_open_cache))
      MYSQL_TABLE_DEFINITION_CACHE: ((mysql_table_definition_cache))
      MYSQL_MAX_CONNECTIONS: ((mysql_max_connections))
      MYSQL_BINLOG_EXPIRE_DAYS: ((mysql_binlog_expire_days))
      MYSQL_CLUSTER_NAME: ((mysql_cluster_name))
      MYSQL_INNODB_STRICT_MODE: ((mysql_innodb_strict_mode))
      MYSQL_CLI_HISTORY: ((mysql_cli_history))
      MYSQL_ALLOW_REMOTE_ADMIN_ACCESS: ((mysql_allow_remote_admin_access))
      MYSQL_ALLOW_LOCAL_INFILE: ((mysql_allow_local_infile))
      PROXY_STATIC_IPS: ((proxy_static_ips))
      PROXY_SHUTDOWN_DELAY: ((proxy_shutdown_delay))
      PROXY_STARTUP_DELAY: ((proxy_startup_delay))
      CF_MYSQL_BROKER_QUOTA_ENFORCER_PAUSE: ((cf_mysql_broker_quota_enforcer_pause))
      CF_MYSQL_BROKER_ALLOW_TABLE_LOCKS: ((cf_mysql_broker_allow_table_locks))
      CF_MYSQL_BROKER_BIND_HOSTNAME: ((cf_mysql_broker_bind_hostname))
      MYSQL_SERVER_INSTANCE_TYPE: ((mysql_server_instance_type))
      MYSQL_SERVER_INSTANCES: ((mysql_server_instances))
      MYSQL_PERSISTENT_DISK_MB: ((mysql_persistent_disk_mb))
      BACKUP_PREPARE_INSTANCE_TYPE: ((backup_prepare_instance_type))
      BACKUP_PREPARE_INSTANCES: ((backup_prepare_instances))
      BACKUP_PREPARE_PERSISTENT_DISK_MB: ((backup_prepare_persistent_disk_mb))
      MYSQL_PROXY_INSTANCE_TYPE: ((mysql_proxy_instance_type))
      MYSQL_PROXY_INSTANCES: ((mysql_proxy_instances))
      MONITORING_INSTANCE_TYPE: ((monitoring_instance_type))
      MONITORING_INSTANCES: ((monitoring_instances))
      MYSQL_BROKER_INSTANCE_TYPE: ((mysql_broker_instance_type))
      MYSQL_BROKER_INSTANCES: ((mysql_broker_instances))

- name: disable-errands
  plan:
  - aggregate:
    - get: pipelines-repo
      passed: [config-product]
    - get: om-cli
      params:
        globs:
        - "*om-linux*"
      passed: [config-product]
    - get: pivnet-product
      resource: pivnet-product
      params:
        globs:
        - "*.pivotal"
      passed: [config-product]
      trigger: true

  - task: disable-errands
    file: pipelines-repo/tasks/disable-errands/task.yml
    params:
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))
      PRODUCT_IDENTIFIER: ((product_identifier))
      ERRANDS: ((errands_to_disable))

- name: apply-changes
  plan:
  - aggregate:
    - get: pipelines-repo
      passed: [disable-errands]
    - get: pivnet-product
      resource: pivnet-product
      params:
        globs:
        - "*.pivotal"
      passed: [disable-errands]
      trigger: true
    - get: om-cli
      params:
        globs:
        - "*-linux"
      passed: [disable-errands]

  - task: validate-apply-changes
    file: pipelines-repo/tasks/validate-apply-changes/task.yml
    params:
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))
      PRODUCT_IDENTIFIER: ((product_identifier))

  - task: apply-changes
    file: pipelines-repo/tasks/apply-changes/task.yml
    params:
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))

- name: set-upgrade-pipeline
  plan:
  - aggregate:
    - get: pipelines-repo
      passed: [apply-changes]
    - get: pivnet-product
      resource: pivnet-product
      params:
        globs:
        - "*.pivotal"
      passed: [apply-changes]
      trigger: true

  - task: set-upgrade-pipeline
    file: pipelines-repo/tasks/set-upgrade-pipeline/task.yml
    params:
      CONCOURSE_USERNAME: ((concourse_user))
      CONCOURSE_PASSWD: ((concourse_pwd))
      ATC_EXTERNAL_URL: ((concourse_url))
      BUILD_PIPELINE_NAME: ((pipeline-name))
      BUILD_TEAM_NAME: ((team-name))
      UPGRADE_PIPELINE_NAME: ((upgrade-pipeline-name))
