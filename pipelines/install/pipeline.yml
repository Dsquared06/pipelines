resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

resources:
- name: govc
  type: github-release
  source:
    user: vmware
    repository: govmomi
    access_token: ((github_token)) ## Optional: Removing this will cause you to hit the rate limit

- name: om-cli
  type: github-release
  source:
    user: pivotal-cf
    repository: om
    access_token: ((github_token)) ## Optional: Removing this will cause you to hit the rate limit

- name: pivnet-cli
  type: github-release
  source:
    user: pivotal-cf
    repository: pivnet-cli
    access_token: ((github_token)) ## Optional: Removing this will cause you to hit the rate limit

- name: jq
  type: github-release
  source:
    user: stedolan
    repository: jq
    access_token: ((github_token)) ## Optional: Removing this will cause you to hit the rate limit

- name: pipelines-repo
  type: git
  source:
    uri: ((github_repo))
    branch: ((github_branch))
    username: ((github_username))
    password: ((github_token))

- name: ops-manager
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: ops-manager
    product_version: ((opsman_product_version))

- name: elastic-runtime
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: elastic-runtime
    product_version: ((ert_product_version))

- name: concourse-trigger-gist
  type: git
  source:
    uri: ((gist_url))
    branch: master
    username: ((github_username))
    password: ((github_token))

jobs:

- name: install-ops-manager
  plan:
  - aggregate:
    - get: pipelines-repo
    - get: govc
      params:
        globs:
        - "*linux_amd64*"
    - get: om-cli
      params:
        globs:
        - "*om-linux*"
    - get: concourse-trigger-gist
    - get: pivnet-product
      resource: ops-manager
      params:
        globs:
        - "*.ova"
      trigger: true
    - get: jq
      params:
        globs:
        - "*linux64*"

  - task: deploy-ops-manager
    file: pipelines-repo/tasks/import-opsman/task.yml
    params:
      GOVC_INSECURE: 1
      GOVC_URL: ((vcenter_host))
      GOVC_USERNAME: ((vcenter_usr))
      GOVC_PASSWORD: ((vcenter_pwd))
      GOVC_DATACENTER: ((vcenter_data_center))
      GOVC_DATASTORE: ((om_data_store))
      GOVC_NETWORK: ((om_vm_network))
      GOVC_RESOURCE_POOL: ((om_resource_pool))
      GOVC_HOST: ((om_vm_host))
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_SSH_PWD: ((om_ssh_pwd))
      OM_NTP_SERVERS: ((om_ntp_servers))
      OM_DNS_SERVERS: ((om_dns_servers))
      OM_GATEWAY: ((om_gateway))
      OM_NETMASK: ((om_netmask))
      OPS_MGR_IP: ((ops_mgr_ip))
      OM_VM_NETWORK: ((om_vm_network))
      OM_VM_NAME: ((om_vm_name))
      OM_RESOURCE_POOL: ((om_resource_pool))
      OM_DISK_TYPE: ((om_disk_type))
      OM_VM_POWER_STATE: ((om_vm_power_state))

  - task: config-ops-manager
    file: pipelines-repo/tasks/config-opsman/task.yml
    params:
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))
      OM_DECRYPTION_PWD: ((om_decryption_pwd))

  - task: bump-timestamp
    file: pipelines-repo/tasks/gist-update/task.yml
    params:
      CI_USERNAME: ((ci_username))
      CI_EMAIL_ADDRESS: ((ci_email_address))

  - put: concourse-trigger-gist
    params: {repository: updated-concourse-trigger-gist}

- name: configure-ops-director
  plan:
  - aggregate:
    - get: pipelines-repo
      passed: [install-ops-manager]
    - get: om-cli
      params:
        globs:
        - "*om-linux*"
      passed: [install-ops-manager]
    - get: concourse-trigger-gist
      trigger: true
      passed: [install-ops-manager]

  - task: config-ops-director
    file: pipelines-repo/tasks/config-opsdir/task.yml
    params:
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))
      VCENTER_HOST: ((vcenter_host))
      VCENTER_USR: ((vcenter_usr))
      VCENTER_PWD: ((vcenter_pwd))
      VCENTER_DATA_CENTER: ((vcenter_data_center))
      VCENTER_DISK_TYPE: ((vcenter_disk_type))
      EPHEMERAL_STORAGE_NAMES: ((ephemeral_storage_names))
      PERSISTENT_STORAGE_NAMES: ((persistent_storage_names))
      BOSH_VM_FOLDER: ((bosh_vm_folder))
      BOSH_TEMPLATES_FOLDER: ((bosh_templates_folder))
      BOSH_DISK_PATH: ((bosh_disk_path))
      NSX_NETWORKING_ENABLED: ((nsx_networking_enabled))
      NSX_ADDRESS: ((nsx_address))
      NSX_PASSWORD: ((nsx_password))
      NSX_USERNAME: ((nsx_username))
      NSX_CA_CERTIFICATE: ((nsx_ca_certificate))
      SSL_VERIFICATION_ENABLED: ((ssl_verification_enabled))
      NTP_SERVERS: ((ntp_servers))
      ENABLE_VM_RESURRECTOR: ((enable_vm_resurrector))
      METRICS_IP: ((metrics_ip))
      OPENTSDB_IP: ((opentsdb_ip))
      POST_DEPLOY_ENABLED: ((post_deploy_enabled))
      BOSH_RECREATE_ON_NEXT_DEPLOY: ((bosh_recreate_on_next_deploy))
      RETRY_BOSH_DEPLOYS: ((retry_bosh_deploys))
      KEEP_UNREACHABLE_VMS: ((keep_unreachable_vms))
      MAX_THREADS: ((max_threads))
      DIRECTOR_WORKER_COUNT: ((director_worker_count))
      PAGER_DUTY_ENABLED: ((pager_duty_enabled))
      PAGER_DUTY_SERVICE_KEY: ((pager_duty_service_key))
      PAGER_DUTY_HTTP_PROXY: ((pager_duty_http_proxy))
      HM_EMAIL_ENABLED: ((hm_email_enabled))
      OPS_DIR_HOSTNAME: ((ops_dir_hostname))
      SMTP_HOST: ((smtp_host))
      SMTP_PORT: ((smtp_port))
      SMTP_DOMAIN: ((smtp_domain))
      FROM_ADDRESS: ((from_address))
      RECIPIENTS_ADDRESS: ((recipients_address))
      SMTP_USER: ((smtp_user))
      SMTP_PASSWORD: ((smtp_password))
      SMTP_TLS_ENABLED: ((smtp_tls_enabled))
      BLOBSTORE_TYPE: ((blobstore_type))
      S3_ENDPOINT: ((s3_endpoint))
      S3_BUCKET_NAME: ((s3_bucket_name))
      S3_ACCESS_KEY: ((s3_access_key))
      S3_SECRET_KEY: ((s3_secret_key))
      S3_SIGNATURE_VERSION: ((s3_signature_version))
      DATABASE_TYPE: ((database_type))
      EXTERNAL_MYSQL_DB_HOST: ((external_mysql_db_host))
      EXTERNAL_MYSQL_DB_PORT: ((external_mysql_db_port))
      EXTERNAL_MYSQL_DB_USER: ((external_mysql_db_user))
      EXTERNAL_MYSQL_DB_PASSWORD: ((external_mysql_db_password))
      EXTERNAL_MYSQL_DB_DATABASE: ((external_mysql_db_database))
      SYSLOG_ENABLED: ((syslog_enabled))
      SYSLOG_ADDRESS: ((syslog_address))
      SYSLOG_PORT: ((syslog_port))
      SYSLOG_TRANSPORT_PROTOCOL: ((syslog_transport_protocol))
      SYSLOG_TLS_ENABLED: ((syslog_tls_enabled))
      SYSLOG_PERMITTED_PEER: ((syslog_permitted_peer))
      SYSLOG_SSL_CA_CERTIFICATE: ((syslog_ssl_ca_certificate))
      ICMP_CHECKS_ENABLED: ((icmp_checks_enabled))
      INFRA_NETWORK_NAME: ((infra_network_name))
      INFRA_VCENTER_NETWORK: ((infra_vcenter_network))
      INFRA_NW_CIDR: ((infra_nw_cidr))
      INFRA_EXCLUDED_RANGE: ((infra_excluded_range))
      INFRA_NW_DNS: ((infra_nw_dns))
      INFRA_NW_GATEWAY: ((infra_nw_gateway))
      INFRA_NW_AZS: ((infra_nw_azs))
      DEPLOYMENT_NETWORK_NAME: ((deployment_network_name))
      DEPLOYMENT_VCENTER_NETWORK: ((deployment_vcenter_network))
      DEPLOYMENT_NW_CIDR: ((deployment_nw_cidr))
      DEPLOYMENT_EXCLUDED_RANGE: ((deployment_excluded_range))
      DEPLOYMENT_NW_DNS: ((deployment_nw_dns))
      DEPLOYMENT_NW_GATEWAY: ((deployment_nw_gateway))
      DEPLOYMENT_NW_AZS: ((deployment_nw_azs))
      SERVICES_NETWORK_NAME: ((services_network_name))
      SERVICES_NW_IS_SERVICE_NW: ((services_nw_is_service_nw))
      SERVICES_VCENTER_NETWORK: ((services_vcenter_network))
      SERVICES_NW_CIDR: ((services_nw_cidr))
      SERVICES_EXCLUDED_RANGE: ((services_excluded_range))
      SERVICES_NW_DNS: ((services_nw_dns))
      SERVICES_NW_GATEWAY: ((services_nw_gateway))
      SERVICES_NW_AZS: ((services_nw_azs))
      DYNAMIC_SERVICES_NETWORK_NAME: ((dynamic_services_network_name))
      DYNAMIC_SERVICES_NW_IS_SERVICE_NW: ((dynamic_services_nw_is_service_nw))
      DYNAMIC_SERVICES_VCENTER_NETWORK: ((dynamic_services_vcenter_network))
      DYNAMIC_SERVICES_NW_CIDR: ((dynamic_services_nw_cidr))
      DYNAMIC_SERVICES_EXCLUDED_RANGE: ((dynamic_services_excluded_range))
      DYNAMIC_SERVICES_NW_DNS: ((dynamic_services_nw_dns))
      DYNAMIC_SERVICES_NW_GATEWAY: ((dynamic_services_nw_gateway))
      DYNAMIC_SERVICES_NW_AZS: ((dynamic_services_nw_azs))
      AZ_1: ((az_1))
      AZ_1_CUSTER_NAME: ((az_1_custer_name))
      AZ_1_RP_NAME: ((az_1_rp_name))
      AZ_2: ((az_2))
      AZ_2_CUSTER_NAME: ((az_2_custer_name))
      AZ_2_RP_NAME: ((az_2_rp_name))
      AZ_3: ((az_3))
      AZ_3_CUSTER_NAME: ((az_3_custer_name))
      AZ_3_RP_NAME: ((az_3_rp_name))
      TRUSTED_CERTIFICATES: ((trusted_certificates))
      GENERATE_VM_PASSWORDS: ((generate_vm_passwords))

- name: ops-director-apply-changes
  plan:
  - aggregate:
    - get: pipelines-repo
      passed: [configure-ops-director]
    - get: om-cli
      params:
        globs:
        - "*om-linux*"
      passed: [configure-ops-director]
    - get: concourse-trigger-gist
      trigger: true
      passed: [configure-ops-director]

  - task: apply-changes
    file: pipelines-repo/tasks/apply-changes/task.yml
    params:
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))

- name: upload-elastic-runtime-tile
  plan:
  - aggregate:
    - get: pipelines-repo
      passed: [ops-director-apply-changes]
    - get: pivnet-product
      resource: elastic-runtime
      trigger: true
      params:
        globs:
        - "*.pivotal"
    - get: om-cli
      params:
        globs:
        - "*om-linux*"
      passed: [ops-director-apply-changes]
    - get: pivnet-cli
      params:
        globs:
        - "*linux-amd64*"
    - get: concourse-trigger-gist
      trigger: true
      passed: [ops-director-apply-changes]

  - task: upload-elastic-runtime-tile
    file: pipelines-repo/tasks/upload-product/task.yml
    params:
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))
      PIVNET_API_TOKEN: ((pivnet_token))
      NO_PROXY: ((company_proxy_domain))
      OPS_MGR_IP: ((ops_mgr_ip))

  - task: upload-stemcell
    file: pipelines-repo/tasks/stemcell-uploader/task.yml
    params:
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))
      PIVNET_API_TOKEN: ((pivnet_token))
      NO_PROXY: ((company_proxy_domain))
      OPS_MGR_IP: ((ops_mgr_ip))
      IAAS_TYPE: ((iaas_type))

- name: config-elastic-runtime-tile
  plan:
  - aggregate:
    - get: pipelines-repo
      passed: [upload-elastic-runtime-tile]
    - get: om-cli
      params:
        globs:
        - "*om-linux*"
      passed: [upload-elastic-runtime-tile]
    - get: concourse-trigger-gist
      trigger: true
      passed: [upload-elastic-runtime-tile]

  - task: config-elastic-runtime-tile
    file: pipelines-repo/tasks/config-ert/task.yml
    params:
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))
      ERT_SINGLETON_JOB_AZ: ((ert_singleton_job_az))
      DEPLOYMENT_NW_AZS: ((deployment_nw_azs))
      NETWORK_NAME: ((deployment_network_name))
      ENABLE_SECURITY_EVENT_LOGGING: ((enable_security_event_logging))
      SYSLOG_HOST: ((syslog_host))
      SYSLOG_PORT: ((syslog_port))
      SYSLOG_PROTOCOL: ((syslog_protocol))
      SYSLOG_DRAIN_BUFFER_SIZE: ((syslog_drain_buffer_size))
      COMPANY_NAME: ((company_name))
      AUTHENTICATION_MODE: ((authentication_mode))
      LOGGREGATOR_ENDPOINT_PORT: ((loggregator_endpoint_port))
      SSL_TERMINATION: ((ssl_termination_point))
      SSL_CERT: ((ssl_cert))
      SSL_PRIVATE_KEY: ((ssl_private_key))
      OPS_MGR_GENERATE_SSL_ENDPOINT: ((om_generate_ssl_endpoint))
      DISABLE_HTTP_PROXY: ((disable_http_proxy))
      TCP_ROUTING: ((tcp_routing))
      TCP_ROUTING_PORTS: ((tcp_routing_ports))
      ROUTE_SERVICES: ((route_services))
      IGNORE_SSL_CERT: ((ignore_ssl_cert_verification))
      SMTP_FROM: ((smtp_from))
      SMTP_ADDRESS: ((smtp_address))
      SMTP_PORT: ((smtp_port))
      SMTP_USER: ((smtp_user))
      SMTP_PWD: ((smtp_pwd))
      SMTP_AUTH_MECHANISM: ((smtp_auth_mechanism))
      LDAP_URL: ((ldap_url))
      LDAP_USER: ((ldap_user))
      LDAP_PWD: ((ldap_pwd))
      SEARCH_BASE: ((search_base))
      SEARCH_FILTER: ((search_filter))
      GROUP_SEARCH_BASE: ((group_search_base))
      GROUP_SEARCH_FILTER: ((group_search_filter))
      MAIL_ATTR_NAME: ((mail_attribute_name))
      FIRST_NAME_ATTR: ((first_name_attribute))
      LAST_NAME_ATTR: ((last_name_attribute))
      SECURITY_ACKNOWLEDGEMENT: ((security_acknowledgement))
      SYSTEM_DOMAIN: ((system_domain))
      APPS_DOMAIN: ((apps_domain))
      DEFAULT_QUOTA_MEMORY_LIMIT_IN_MB: ((default_quota_memory_limit_mb))
      DEFAULT_QUOTA_MAX_SERVICES_COUNT: ((default_quota_max_number_services))
      HA_PROXY_IPS: ((ha_proxy_ips))
      SKIP_CERT_VERIFY: ((skip_cert_verify))
      DISABLE_INSECURE_COOKIES: ((disable_insecure_cookies))
      ROUTER_STATIC_IPS: ((router_static_ips))
      ROUTER_REQUEST_TIMEOUT_IN_SEC: ((router_request_timeout_in_seconds))
      GARDEN_NETWORK_MTU: ((garden_network_mtu))
      MYSQL_MONITOR_EMAIL: ((mysql_monitor_email))
      MYSQL_BACKUPS: ((mysql_backups))
      ALLOW_APP_SSH_ACCESS: ((allow_app_ssh_access))
      TCP_ROUTER_STATIC_IPS: ((tcp_router_static_ips))
      SSH_STATIC_IPS: ((ssh_static_ips))
      CONSUL_SERVER_INSTANCES: ((consul_server_instances))
      NATS_INSTANCES: ((nats_instances))
      NFS_SERVER_INSTANCES: ((nfs_server_instances))
      MYSQL_PROXY_INSTANCES: ((mysql_proxy_instances))
      MYSQL_INSTANCES: ((mysql_instances))
      BACKUP_PREPARE_INSTANCES: ((backup_prepare_instances))
      UAA_INSTANCES: ((uaa_instances))
      CLOUD_CONTROLLER_INSTANCES: ((cloud_controller_instances))
      HA_PROXY_INSTANCES: ((ha_proxy_instances))
      ROUTER_INSTANCES: ((router_instances))
      MYSQL_MONITOR_INSTANCES: ((mysql_monitor_instances))
      CLOCK_GLOBAL_INSTANCES: ((clock_global_instances))
      CLOUD_CONTROLLER_WORKER_INSTANCES: ((cloud_controller_worker_instances))
      DIEGO_DATABASE_INSTANCES: ((diego_database_instances))
      DIEGO_BRAIN_INSTANCES: ((diego_brain_instances))
      DIEGO_CELL_INSTANCES: ((diego_cell_instances))
      DOPPLER_INSTANCES: ((doppler_instances))
      LOGGREGATOR_TC_INSTANCES: ((loggregator_traffic_controller_instances))
      TCP_ROUTER_INSTANCES: ((tcp_router_instances))
      SYSLOG_ADAPTER_INSTANCES: ((syslog_adapter_instances))

- name: disable-errands
  plan:
  - aggregate:
    - get: pipelines-repo
      passed: [config-elastic-runtime-tile]
    - get: om-cli
      params:
        globs:
        - "*om-linux*"
      passed: [config-elastic-runtime-tile]
    - get: concourse-trigger-gist
      trigger: true
      passed: [config-elastic-runtime-tile]

  - task: disable-errands
    file: pipelines-repo/tasks/disable-errands/task.yml
    params:
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))
      PRODUCT_IDENTIFIER: ((product_identifier))
      ERRANDS: ((errands_to_disable))

- name: elastic-runtime-apply-changes
  plan:
  - aggregate:
    - get: pipelines-repo
      passed: [disable-errands]
    - get: om-cli
      params:
        globs:
        - "*om-linux*"
      passed: [disable-errands]
    - get: concourse-trigger-gist
      trigger: true
      passed: [disable-errands]

  - task: apply-changes
    file: pipelines-repo/tasks/apply-changes/task.yml
    params:
      OPS_MGR_HOST: ((ops_mgr_host))
      OPS_MGR_USR: ((ops_mgr_usr))
      OPS_MGR_PWD: ((ops_mgr_pwd))

- name: pause-install-pipeline
  plan:
  - aggregate:
    - get: pipelines-repo
      passed: [elastic-runtime-apply-changes]
    - get: concourse-trigger-gist
      trigger: true
      passed: [elastic-runtime-apply-changes]

  - task: apply-changes
    file: pipelines-repo/tasks/change-pipeline-state/task.yml
    params:
      CONCOURSE_USERNAME: ((concourse_username))
      CONCOURSE_PASSWD: ((concourse_passwd))
      ATC_EXTERNAL_URL: ((atc_external_url))
      PIPELINE_NAME: ((pipeline_name))
      TEAM_NAME: ((team_name))
      PIPELINE_STATE: ((pipeline_state))
